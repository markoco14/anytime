"""add unqiue pair constraint on sender_id receiver_id and disallow null values

will transfer owner_id and guest_id values in this migration

Revision ID: 01c56302efb5
Revises: 5c352b9fbae4
Create Date: 2024-08-24 14:59:05.846053

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '01c56302efb5'
down_revision: Union[str, None] = '5c352b9fbae4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Transfer values from owner_id to sender_id and guest_id to receiver_id
    op.execute('''
        UPDATE etime_shares
        SET sender_id = owner_id, receiver_id = guest_id
    ''')

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('etime_shares', 'sender_id',
                    existing_type=mysql.INTEGER(),
                    nullable=False)
    op.alter_column('etime_shares', 'receiver_id',
                    existing_type=mysql.INTEGER(),
                    nullable=False)
    op.create_unique_constraint('uix_sender_id_receiver_id', 'etime_shares', [
                                'sender_id', 'receiver_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uix_sender_id_receiver_id',
                       'etime_shares', type_='unique')
    op.alter_column('etime_shares', 'receiver_id',
                    existing_type=mysql.INTEGER(),
                    nullable=True)
    op.alter_column('etime_shares', 'sender_id',
                    existing_type=mysql.INTEGER(),
                    nullable=True)

    # Set sender_id and receiver_id to NULL
    op.execute('''
        UPDATE etime_shares
        SET sender_id = NULL, receiver_id = NULL
    ''')
    # ### end Alembic commands ###
